/* This file is generated by BUSMASTER */
/* VERSION [1.2] */
/* BUSMASTER VERSION [3.0.0] */
/* PROTOCOL [CAN] */

/* Start BUSMASTER include header */
#include <Windows.h>
#include <CANIncludes.h>
#include <stdlib.h>
#include <time.h>
/* End BUSMASTER include header */


/* Start BUSMASTER global variable */

STCAN_MSG tx;
uint8_t i=0;

uint16_t can_id[116]= {0x6BA,0x6BB,0x7A1,0x7A2,0x7A3,0x7A4,0x647,0x648,0x649,0x64A,0x641,0x642,0x650,
0x64F,0x7D6,0x7D7,0x361,0xA07,0x371,0x70F,0xA1,0xA9,0xB1,0x321,0x121,0x231,0x232,0x341,0x631,0x62B,0x64B,0x65B,
0x169,0x7B4,0x7C2,0x7ED,0x680,0x151,0x644,0x645,0x8E,0x91,0x8F,0x12E,0x12F,0x221,0x50E,0x19F,0x50F,0xA17,0x7CC,
0x7C5,0x674,0x675,0x1B3,0x1B4,0x1B5,0x1B6,0x1B7,0x1B8,0x1B9,0x12A,0x14E,0x16E,0x16F,0x170,0x666,
0x172,0x17E,0x41E,0x41F,0x152,0x155,0x153,0x154,0x667,0x668,0x669,0x171,0x174,0x643,0x646,0x4CE,0x7D8,0x7D9,
0x7DA,0x7DB,0x7E1,0x7E9,0x7DF,0x740,0x760,0x333,0x777,0x7E0,0x7E8,0x790,0x791,0x792,0x793,0x794,0x795,0x796,
0x797,0x798,0x799,0x79A,0x79B,0x79C,0x79D,0x79E,0x79F,0x173,0x157,0x555};

Vehicle_left_SW_Cube MSG1;
Vehicle_Right_SW_Cube MSG2;
RSC_Diagnostic_Request MSG3;
RSC_Diagnostic_Response MSG4;
LSC_Diagnostic_Request MSG5;
LSC_Diagnostic_Response MSG6;

RSC_HW_Version_Info MSG7;
RSC_SW_Version MSG8;

LSC_HW_Version_Info MSG9;
LSC_SW_Version MSG10;


ICM_HW_Version_Info MSG11;
ICM_SW_Version MSG12;

ICM_Digital_Input MSG13;

IC_Paramter_1 MSG14;

HU_Diagnostic_Response  MSG15;
HU_Diagnostic_Request MSG16;


Display_info MSG17;

ICM_Error MSG18;

Environment_Data MSG19;

TimeStamp_Sync_Message MSG20;

VCU_to_MCU_Auth_Req MSG21;
MCU_to_VCU_Auth_Resp MSG22;
VCU_to_MCU_Auth_Stat MSG23;

MCU_Data1 MSG24;

MCU_Data2 MSG25;

MCU_Data3 MSG26;

MCU_Data4 MSG27;

MCU_Fault_Data  MSG28;


MCU_SW_Version MSG29;

IMU_Data_X MSG30;

IMU_Data_Y MSG31;
IMU_Data_Z MSG32;
Vehicle_Func MSG33;

MCU_Diagnostic_Request MSG34;
MCU_Diagnostic_Response MSG35;
Func_Diagnostic_Request MSG36;
OTA_Status MSG37;
Vehicle_Mode MSG38;
OBC_SW_Version MSG39;

OBC_HW_Version MSG40;
VCU_to_OBC_Auth_Req MSG41;

OBC_to_VCU_Auth_Resp MSG42;
VCU_to_OBC_Auth_Stat MSG43;
BATTERY_STATUS_INFO MSG44;
BATTERY_LIMITS   MSG45;
Charger_status_Info MSG46;
Charger_Fault_Info MSG47;

Charger_Parameter_1 MSG48;
OBC_HP_DCDC_Parameter_2 MSG49;
OBC_Diagnostic_Request MSG50;
OBC_Diagnostic_Response MSG51;
BMS_Diagnostic_Request MSG52;
BMS_Diagnostic_Response MSG53;
BMS_CELL_VOLTAGE_1 MSG54;
BMS_CELL_VOLTAGE_2 MSG55;
BMS_CELL_VOLTAGE_3 MSG56;
BMS_CELL_VOLTAGE_4 MSG57;
BMS_CELL_VOLTAGE_5 MSG58;
BMS_CELL_VOLTAGE_6 MSG59;
BMS_CELL_VOLTAGE_7 MSG60;

BMS_PARAMETER_1 MSG61;
BMS_PARAMETER_LIMIT_2 MSG62;
BMS_PARAMETER_3 MSG63;
BMS_PARAMETER_4 MSG64;
Battery_Energy_Cycles MSG65;
BMS_SOFTWARE_VERSIONS MSG66;
BATTERY_TEMPERATURE MSG67;
BMS_CELL_STATUS MSG68;
BMS_Fault_1 MSG69;
BMS_Fault_2 MSG70;
Traction_Control MSG71;
Traction_Control2 MSG72;
SOM_Parameters_1 MSG73;
ABS_Parameters MSG74;
ABS_Software_Version MSG75;
BMS_HARDWARE_VERSION MSG76;
ABS_Hardware_Version MSG77;
OBC_Wakeup_Info MSG78;
VCU_Data MSG79;
ESCL_HW_Version_Info MSG80;
ESCL_SW_Version_Info MSG81;
ESCL_Data MSG82;

ESCL_Diagnostic_Request MSG84;
ESCL_Diagnostic_Response MSG83;
BCM_Diagnostic_Request MSG86;
BCM_Diagnostic_Response MSG85;

Custom_Mode MSG87;
SOM_Settings_Data MSG88;
HP_DCDC_Parameter1 MSG89;



/* End BUSMASTER global variable */


/* Start BUSMASTER Function Prototype  */
GCC_EXTERN void GCC_EXPORT OnTimer_TIMER_100( );
void Utils_can_id_0x6BA();
void Utils_can_id_0x6BB();
void Utils_can_id_0x7A1();
void Utils_can_id_0x7A2();
void Utils_can_id_0x7A3();
void Utils_can_id_0x7A4();
void Utils_can_id_sig();
void Utils_can_id_0x647();
void Utils_can_id_0x648();
void Utils_can_id_0x649();
void Utils_can_id_0x64A();
void Utils_can_id_0x641();
void Utils_can_id_0x642();
void Utils_can_id_0x650();
void Utils_can_id_0x64F();
void Utils_can_id_0x7D6();
void Utils_can_id_0x7D7();
void Utils_can_id_0x361();
void Utils_can_id_0x707();
void Utils_can_id_0x371();
void Utils_can_id_0x70F();
void Utils_can_id_0xA1();
void Utils_can_id_0xA9();
void Utils_can_id_0xB1();
void Utils_can_id_0x321();
void Utils_can_id_0x121();
void Utils_can_id_0x231();
void Utils_can_id_0x232();
void Utils_can_id_0x341();
void Utils_can_id_0x631();
void Utils_can_id_0x62B();
void Utils_can_id_0x64B();
void Utils_can_id_0x65B();
void Utils_can_id_0x169();
void Utils_can_id_0x7B4();
void Utils_can_id_0x7ED();
void Utils_can_id_0x680();
void Utils_can_id_0x151();
void Utils_can_id_0x7C2();
void Utils_can_id_0x644();
void Utils_can_id_0x645();
void Utils_can_id_0x8E();
void Utils_can_id_0x91();
void Utils_can_id_0x8F();
void Utils_can_id_0x12E();
void Utils_can_id_0x12F();
void Utils_can_id_0x221();
void Utils_can_id_0x50E();
void Utils_can_id_0x19F();
void Utils_can_id_0x50F();
void Utils_can_id_0x1A7();
void Utils_can_id_0x7CC();
void Utils_can_id_0x7C5();
void Utils_can_id_0x674();
void Utils_can_id_0x675();
void Utils_can_id_0x1B3();
void Utils_can_id_0x1B4();
void Utils_can_id_0x1B5();
void Utils_can_id_0x1B6();
void Utils_can_id_0x1B7();
void Utils_can_id_0x1B8();
void Utils_can_id_0x1B9();
void Utils_can_id_0x12A();
void Utils_can_id_0x14E();
void Utils_can_id_0x16E();
void Utils_can_id_0x16F();
void Utils_can_id_0x170();
void Utils_can_id_0x666();
void Utils_can_id_0x172();
void Utils_can_id_0x17E();
void Utils_can_id_0x41E();
void Utils_can_id_0x41F();
void Utils_can_id_0x152();
void Utils_can_id_0x155();
void Utils_can_id_0x153();
void Utils_can_id_0x154();
void Utils_can_id_0x667();
void Utils_can_id_0x668();
void Utils_can_id_0x669();
void Utils_can_id_0x171();
void Utils_can_id_0x174();
void Utils_can_id_0x643();
void Utils_can_id_0x646();
void Utils_can_id_0x4CE();
void Utils_can_id_0x7D8();
void Utils_can_id_0x7D9();
void Utils_can_id_0x7DA();
void Utils_can_id_0x7DB();
void Utils_can_id_0x173();
void Utils_can_id_0x555();
/* End BUSMASTER Function Prototype  */

/* Start BUSMASTER Function Wrapper Prototype  */
/* End BUSMASTER Function Wrapper Prototype  */


/* Start BUSMASTER generated function - OnTimer_TIMER_100 */
void OnTimer_TIMER_100( )
{


i++;
if(i==90)
{
Trace("%d",i);
i=0;

}

Utils_can_id_sig();
}/* End BUSMASTER generated function - OnTimer_TIMER_100 */
/* Start BUSMASTER generated function - Utils_can_id_0x6BA */
void Utils_can_id_0x6BA()
{

MSG1.High_beam =0x01;
MSG1.Low_beam =0x01;
MSG1.Pass_beam =0x01;
MSG1.Left_Indicator =0x01;
MSG1.Cruise_Control =0x01;
MSG1.Right_Indicator =0x01;
MSG1.Horn =0x01;
MSG1.Eco_Mode =0x01;
MSG1.Tour_Mode =0x01;
MSG1.Sports_Mode =0x01;
MSG1.Turbo_mode =0x01;
MSG1.Neutral =0x01;
MSG1.Park_Assist =0x01;
MSG1.Home =0x01;
MSG1.Joystick_Up =0x01;
MSG1.Joystick_Down =0x01;
MSG1.Joystick_Left =0x01;
MSG1.Joystick_Right =0x01;
MSG1.Joystick_SET_RST =0x01;
MSG1.LSC_Power_Status =0x01;
MSG1.Joystick_fault =0x01;
MSG1.Mode_Selector_Roller_fault =0x01;
MSG1.Left_Indicator_Button_fault =0x01;
MSG1.Cruise_Control_Button_fault =0x01;
MSG1.Horn_Button_fault =0x01;
MSG1.Home_Button_fault =0x01;
MSG1.LSC_System_fault =0x01;

SendMsg(MSG1);
}/* End BUSMASTER generated function - Utils_can_id_0x6BA */
/* Start BUSMASTER generated function - Utils_can_id_0x6BB */
void Utils_can_id_0x6BB()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG2.Voice_Assist=randomNumber;
randomNumber = rand() % 120 + 1;
MSG2.Regen=randomNumber;
randomNumber = rand() % 120 + 1;
MSG2.Key_Ignition=randomNumber;
randomNumber = rand() % 120 + 1;
MSG2.Start_Button=randomNumber;

SendMsg(MSG2);
}/* End BUSMASTER generated function - Utils_can_id_0x6BB */
/* Start BUSMASTER generated function - Utils_can_id_0x7A1 */
void Utils_can_id_0x7A1()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG3.RSC_Diag_Req=randomNumber;

SendMsg(MSG3);
}/* End BUSMASTER generated function - Utils_can_id_0x7A1 */
/* Start BUSMASTER generated function - Utils_can_id_0x7A2 */
void Utils_can_id_0x7A2()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG4.RSC_Diag_Resp=randomNumber;

SendMsg(MSG4);
}/* End BUSMASTER generated function - Utils_can_id_0x7A2 */
/* Start BUSMASTER generated function - Utils_can_id_0x7A3 */
void Utils_can_id_0x7A3()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG5.LSC_Diag_Req=randomNumber;
SendMsg(MSG5);
}/* End BUSMASTER generated function - Utils_can_id_0x7A3 */
/* Start BUSMASTER generated function - Utils_can_id_0x7A4 */
void Utils_can_id_0x7A4()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG6.LSC_Diagnostic_Resp=randomNumber;

SendMsg(MSG6);
}/* End BUSMASTER generated function - Utils_can_id_0x7A4 */
/* Start BUSMASTER generated function - Utils_can_id_sig */
void Utils_can_id_sig()
{


//Trace("%d",i);
switch (i)

{
case 1:
	Utils_can_id_0x6BA();
	break;

case 2:
	Utils_can_id_0x6BB();
	break;

case 3:
	Utils_can_id_0x7A1();
	break;

case 4:
	Utils_can_id_0x7A2();
	break;

case 5:
	Utils_can_id_0x7A3();
	break;

case 6:
	Utils_can_id_0x7A4();
	break;

case 7:
	Utils_can_id_0x647();
	break;
case 8:
	Utils_can_id_0x648();
	break;
case 9:
	Utils_can_id_0x649();
	break;
case 10:
	Utils_can_id_0x64A();
	break;

case 11:
	Utils_can_id_0x641();
	break;
case 12:
	Utils_can_id_0x642();
	break;

case 13:
	Utils_can_id_0x650();
	break;

case 14:
	Utils_can_id_0x64F();
	break;

case 15:
	Utils_can_id_0x7D6();
	break;

case 16:
	Utils_can_id_0x7D7();
	break;

case 17:
	Utils_can_id_0x361();
	break;

case 18:
	Utils_can_id_0x707();
	break;
case 19:
	Utils_can_id_0x371();
	break;
case 20:
	Utils_can_id_0x70F();
	break;
case 21:
	Utils_can_id_0xA1();
	break;
case 22:
	Utils_can_id_0xA9();
	break;
case 23:
	Utils_can_id_0xB1();
	break;
case 24:
	Utils_can_id_0x321();
	break;
case 25:
	Utils_can_id_0x121();
	break;
case 26:
	Utils_can_id_0x231();
	break;
case 27:
	Utils_can_id_0x232();
	break;
case 28:
	Utils_can_id_0x341();
	break;

case 29:
	Utils_can_id_0x631();
	break;

case 30:
	Utils_can_id_0x62B();
	break;

case 31:
	Utils_can_id_0x64B();
	break;
case 32:
	Utils_can_id_0x65B();
	break;
case 33:
	Utils_can_id_0x169();
	break;
case 34:
	Utils_can_id_0x7B4();
	break;
case 35:
	Utils_can_id_0x7C2();
	break;
case 36:
	Utils_can_id_0x7ED();
	break;
case 37:
	Utils_can_id_0x680();
	break;
case 38:
	Utils_can_id_0x151();
	break;
case 39:
	Utils_can_id_0x644();
	break;
case 40:
	Utils_can_id_0x645();
	break;
case 41:
	Utils_can_id_0x8E();
	break;
case 42:
	Utils_can_id_0x91();
	break;
case 43:
	Utils_can_id_0x8F();
	break;
case 44:
	Utils_can_id_0x12E();
	break;

case 45:
	Utils_can_id_0x12F();
	break;
case 46:
	Utils_can_id_0x221();
	break;
case 47:
	Utils_can_id_0x50E();
	break;
case 48:
	Utils_can_id_0x19F();
	break;
case 49:
	Utils_can_id_0x50F();
	break;
case 50:
	Utils_can_id_0x1A7();
	break;
case 51:
	Utils_can_id_0x7CC();
	break;
case 52:
	Utils_can_id_0x7C5();
	break;
case 53:
	Utils_can_id_0x674();
	break;
case 54:
	Utils_can_id_0x675();
	break;
case 55:
	Utils_can_id_0x1B3();
	break;
case 56:
	Utils_can_id_0x1B4();
	break;
case 57:
	Utils_can_id_0x1B5();
	break;
case 58:
	Utils_can_id_0x1B6();
	break;
case 59:
	Utils_can_id_0x1B7();
	break;
case 60:
	Utils_can_id_0x1B8();
	break;
case 61:
	Utils_can_id_0x1B9();
	break;
case 62:
	Utils_can_id_0x12A();
	break;
case 63:
	Utils_can_id_0x14E();
	break;
case 64:
	Utils_can_id_0x16E();
	break;
case 65:
	Utils_can_id_0x16F();
	break;
case 66:
	Utils_can_id_0x170();
	break;
case 67:
	Utils_can_id_0x666();
	break;
case 68:
	Utils_can_id_0x172();
	break;
case 69:
	Utils_can_id_0x17E();
	break;
case 70:
	Utils_can_id_0x41E();
	break;
case 71:
	Utils_can_id_0x41F();
	break;
case 72:
	Utils_can_id_0x152();
	break;
case 73:
	Utils_can_id_0x153();
	break;
case 74:
	Utils_can_id_0x154();
	break;
case 75:
	Utils_can_id_0x667();
	break;
case 76:
	Utils_can_id_0x668();
	break;
case 77:
	Utils_can_id_0x669();
	break;
case 78:
	Utils_can_id_0x171();
	break;
case 79:
	Utils_can_id_0x174();
	break;
case 80:
	Utils_can_id_0x643();
	break;

case 81:
	Utils_can_id_0x646();
	break;
case 82:
	Utils_can_id_0x4CE();
	break;
case 83:
	Utils_can_id_0x7D8();
	break;
case 84:
	Utils_can_id_0x7D9();
	break;
case 85:
	Utils_can_id_0x7DA();
	break;
case 86:
	Utils_can_id_0x7DB();
	break;
case 87:
	Utils_can_id_0x173();
	break;
case 88:
	Utils_can_id_0x555();
	break;
case 89:
	Utils_can_id_0x155();
Trace("case=%x",i);
	break;




}
}/* End BUSMASTER generated function - Utils_can_id_sig */
/* Start BUSMASTER generated function - Utils_can_id_0x647 */
void Utils_can_id_0x647()
{
 	srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;

	MSG7.RSC_Hardware_Version =randomNumber;
	SendMsg(MSG7);
}/* End BUSMASTER generated function - Utils_can_id_0x647 */
/* Start BUSMASTER generated function - Utils_can_id_0x648 */
void Utils_can_id_0x648()
{
srand(time(NULL));
 	// Generate a random number between 1 and 10
    int randomNumber = rand() % 120 + 1;
 
	MSG8.RSC_Firmware_Version=randomNumber;
  	randomNumber = rand() % 120 + 1;
	MSG8.RSC_Bootloader_Version=randomNumber;
SendMsg(MSG8);
}/* End BUSMASTER generated function - Utils_can_id_0x648 */
/* Start BUSMASTER generated function - Utils_can_id_0x649 */
void Utils_can_id_0x649()
{
srand(time(NULL));
// Generate a random number between 1 and 10
int randomNumber = rand() % 120 + 1;

MSG9.LSC_Hardware_Version =randomNumber;
SendMsg(MSG9);
}/* End BUSMASTER generated function - Utils_can_id_0x649 */
/* Start BUSMASTER generated function - Utils_can_id_0x64A */
void Utils_can_id_0x64A()
{
srand(time(NULL));
// Generate a random number between 1 and 10
int randomNumber = rand() % 120 + 1;
MSG10.LSC_Firmware_Version=randomNumber;
randomNumber = rand() % 120 + 1;
MSG10.LSC_Bootloader_Version=randomNumber;

SendMsg(MSG10);
}/* End BUSMASTER generated function - Utils_can_id_0x64A */
/* Start BUSMASTER generated function - Utils_can_id_0x641 */
void Utils_can_id_0x641()
{
srand(time(NULL));
// Generate a random number between 1 and 10
int randomNumber = rand() % 120 + 1;

MSG11.ICM_Hardware_Version =randomNumber;
SendMsg(MSG11);
}/* End BUSMASTER generated function - Utils_can_id_0x641 */
/* Start BUSMASTER generated function - Utils_can_id_0x642 */
void Utils_can_id_0x642()
{
	srand(time(NULL));
int randomNumber = rand() % 120 + 1;

MSG12.ICM_Firmware_Version=randomNumber;
randomNumber = rand() % 120 + 1;
MSG12.ICM_Bootloader_Version=randomNumber;

SendMsg(MSG12);
}/* End BUSMASTER generated function - Utils_can_id_0x642 */
/* Start BUSMASTER generated function - Utils_can_id_0x650 */
void Utils_can_id_0x650()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;

MSG13.Backlight_Driver_Fault_Input=randomNumber;
randomNumber = rand() % 120 + 1;
MSG13.Ambient_Light_Sensor_Interrupt=randomNumber;
randomNumber = rand() % 120 + 1;
MSG13.Ambient_Temp_Sensor_Interrupt=randomNumber;
randomNumber = rand() % 120 + 1;
MSG13.Warning_Status=randomNumber;
randomNumber = rand() % 120 + 1;
MSG13.Error_Status=randomNumber;
randomNumber = rand() % 120 + 1;
MSG13.Warning_Counter=randomNumber;
randomNumber = rand() % 120 + 1;
MSG13.Error_Counter=randomNumber;
randomNumber = rand() % 120 + 1;
MSG13.Reset_Counter=randomNumber;

SendMsg(MSG13);
}/* End BUSMASTER generated function - Utils_can_id_0x650 */
/* Start BUSMASTER generated function - Utils_can_id_0x64F */
void Utils_can_id_0x64F()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG14.LED_Temp =randomNumber;
randomNumber = rand() % 120 + 1;
MSG14.Temp_Sensor_Input_Controller =randomNumber;
randomNumber = rand() % 120 + 1;
MSG14.MAin_Input_Supply =randomNumber;
randomNumber = rand() % 120 + 1;
MSG14.Temp_Sensor_Input_Ambient=randomNumber;

SendMsg(MSG14);
}/* End BUSMASTER generated function - Utils_can_id_0x64F */
/* Start BUSMASTER generated function - Utils_can_id_0x7D6 */
void Utils_can_id_0x7D6()
{

srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG15.HU_Diagnostic_Resp=randomNumber;
SendMsg(MSG15);
}/* End BUSMASTER generated function - Utils_can_id_0x7D6 */
/* Start BUSMASTER generated function - Utils_can_id_0x7D7 */
void Utils_can_id_0x7D7()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG16.HU_Diag_Req=randomNumber;

SendMsg(MSG16);
}/* End BUSMASTER generated function - Utils_can_id_0x7D7 */
/* Start BUSMASTER generated function - Utils_can_id_0x361 */
void Utils_can_id_0x361()
{
srand(time(NULL));
int randomNumber = rand() % 120 + 1;
MSG17.Side_Stand_Status=randomNumber;
randomNumber = rand() % 120 + 1;
MSG17.Display_SoC=randomNumber;
randomNumber = rand() % 120 + 1;
MSG17.Vehicle_Range=randomNumber;
randomNumber = rand() % 120 + 1;
MSG17.Indicators_TTL=randomNumber;
randomNumber = rand() % 120 + 1;
MSG17.FrontLight_TTL=randomNumber;
randomNumber = rand() % 120 + 1;
MSG17.Charge_TTL=randomNumber;
randomNumber = rand() % 120 + 1;
MSG17.DRL_Lamp_TTL=randomNumber;
randomNumber = rand() % 120 + 1;
MSG17.Low_Battery_Alert_TTL=randomNumber;
randomNumber = rand() % 120 + 1;
MSG17.Display_Vehicle_Speed=randomNumber;
randomNumber = rand() % 120 + 1;
MSG17.Fog_Lamp_TTL=randomNumber;

SendMsg(MSG17);
}/* End BUSMASTER generated function - Utils_can_id_0x361 */
/* Start BUSMASTER generated function - Utils_can_id_0x707 */
void Utils_can_id_0x707()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG18.Input_OverVoltage =randomNumber;
randomNumber = rand() % 120 + 1;
MSG18.Input_UncerVoltage =randomNumber;
randomNumber = rand() % 120 + 1;
MSG18.Input_OverCurrent =randomNumber;
randomNumber = rand() % 120 + 1;
MSG18.Output_OverCurrent =randomNumber;
randomNumber = rand() % 120 + 1;
MSG18.High_Temp =randomNumber;
randomNumber = rand() % 120 + 1;
MSG18.Low_Temp =randomNumber;
randomNumber = rand() % 120 + 1;
MSG18.Temp_Sensor_Failure =randomNumber;
randomNumber = rand() % 120 + 1;
MSG18.Output_Short_Circuit_Failure =randomNumber;


SendMsg(MSG18);
}/* End BUSMASTER generated function - Utils_can_id_0x707 */
/* Start BUSMASTER generated function - Utils_can_id_0x371 */
void Utils_can_id_0x371()
{
	srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;

MSG19.Ambient_Light_Sensor_Value=randomNumber;
randomNumber = rand() % 120 + 1;
MSG19.Ambient_Temp_Sensor_Value=randomNumber;

SendMsg(MSG19);
}/* End BUSMASTER generated function - Utils_can_id_0x371 */
/* Start BUSMASTER generated function - Utils_can_id_0x70F */
void Utils_can_id_0x70F()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG20.VCU_TimeStamp=randomNumber;

SendMsg(MSG20);
}/* End BUSMASTER generated function - Utils_can_id_0x70F */
/* Start BUSMASTER generated function - Utils_can_id_0xA1 */
void Utils_can_id_0xA1()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;

MSG21.VCU_to_MCU_Seed=randomNumber;

SendMsg(MSG21);
}/* End BUSMASTER generated function - Utils_can_id_0xA1 */
/* Start BUSMASTER generated function - Utils_can_id_0xA9 */
void Utils_can_id_0xA9()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;

MSG22.MCU_Key=randomNumber;

SendMsg(MSG22);
}/* End BUSMASTER generated function - Utils_can_id_0xA9 */
/* Start BUSMASTER generated function - Utils_can_id_0xB1 */
void Utils_can_id_0xB1()
{
	srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;

MSG23.VCU_Auth_Resp_to_MCU=randomNumber;

SendMsg(MSG23);
}/* End BUSMASTER generated function - Utils_can_id_0xB1 */
/* Start BUSMASTER generated function - Utils_can_id_0x321 */
void Utils_can_id_0x321()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG24.MCU_DC_Current =randomNumber;
randomNumber = rand() % 120 + 1;
MSG24.MCU_Temperature =randomNumber;
randomNumber = rand() % 120 + 1;
MSG24.Motor_temp =randomNumber;
MSG24.Motor_Torque =randomNumber;

SendMsg(MSG24);
}/* End BUSMASTER generated function - Utils_can_id_0x321 */
/* Start BUSMASTER generated function - Utils_can_id_0x121 */
void Utils_can_id_0x121()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;

MSG25.Rotor_Angle=randomNumber;
randomNumber = rand() % 120 + 1;
MSG25.MCU_Riding_Mode= randomNumber;
randomNumber = rand() % 120 + 1;
MSG25.MCU_DC_voltage =randomNumber;
randomNumber = rand() % 120 + 1;
MSG25.Cruise_Control_Status =randomNumber;
randomNumber = rand() % 120 + 1;
MSG25.Hill_Hold_Status =randomNumber;



SendMsg(MSG25);
}/* End BUSMASTER generated function - Utils_can_id_0x121 */
/* Start BUSMASTER generated function - Utils_can_id_0x231 */
void Utils_can_id_0x231()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;

MSG26.R_Phase_Current_MCU=randomNumber;
randomNumber = rand() % 120 + 1;
MSG26.Y_Phase_Current_MCU =randomNumber;
randomNumber = rand() % 120 + 1;
MSG26.B_Phase_Current_MCU =randomNumber;
randomNumber = rand() % 120 + 1;
MSG26.Regen_Min_Speed=randomNumber;



SendMsg(MSG26);
}/* End BUSMASTER generated function - Utils_can_id_0x231 */
/* Start BUSMASTER generated function - Utils_can_id_0x232 */
void Utils_can_id_0x232()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG27.Motor_rpm=randomNumber;
randomNumber = rand() % 120 + 1;
MSG27.Regen_status=randomNumber;

SendMsg(MSG27);
}/* End BUSMASTER generated function - Utils_can_id_0x232 */
/* Start BUSMASTER generated function - Utils_can_id_0x341 */
void Utils_can_id_0x341()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG28.MotorOC_protect_U_ph =randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.MotorOC_protect_V_ph=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.MotorOC_protect_W_ph=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.Mcu_Flt_Wrong_Offset_Fault=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.MCU_over_temperature_warning=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.Motor_over_temperature_warning=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.MCU_Unintended_Direction=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.Encoder_Failure=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.DCbus_undervoltage =randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.DCbus_overvoltage=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.DCbus_overcurrent=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.MCU_Over_speed_fault=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.Mcu_Flt_DCBus_Voltagesensor_STG=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.Mcu_Flt_DCBus_VoltgeSensor_STB=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.MCU_Flt_KL30_Sensor_STG=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.MCU_Flt_KL30_Sensor_STB=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.Mcu_Flt_BoardTempSensorSTG=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.Mcu_Flt_BoardTempSensorSTB=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.Mcu_Flt_RphaseSTG=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.Mcu_Flt_RphaseSTB=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.Loss_of_Tractioncontrol2msg=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.LV_supplyOvervoltage=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.LV_supplyUndervoltage=randomNumber;
MSG28.Mcu_Flt_YphaseSTG=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.Mcu_Flt_YphaseSTB=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.Mcu_Flt_BphaseSTG=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.Mcu_Flt_BphaseSTB=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.MCU_Flt_MachineTempSensorSTB=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.MCU_Flt_MachineTempSensorSTG=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.Mcu_Flt_DCCurrentSensorSTG=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.Mcu_Flt_DCCurrentSensorSTB=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.Mcu_Flt_BuckConvert5V_overvolt=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.Mcu_Flt_BuckConvert5v_undervolt=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.MCU_dio_over_volt_status=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.MCU_dio_over_curr_status=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.MCU_dio_phase_ctrl_status=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.Mcu_Flt_MachineTemp_Low=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.Mcu_Flt_BoardTemp_Low=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.Mcu_Flt_Rotor_Stall=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.Mcu_Flt_MOSFET_HighTemp=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.MCU_Flt_MOSFET_STG=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.MCU_Flt_MOSFET_STB=randomNumber;
randomNumber = rand() % 120 + 1;
MSG28.Throttle_ideal_percentage_error=randomNumber;




SendMsg(MSG28);
}/* End BUSMASTER generated function - Utils_can_id_0x341 */
/* Start BUSMASTER generated function - Utils_can_id_0x631 */
void Utils_can_id_0x631()
{
srand(time(NULL));
// Generate a random number between 1 and 10
int randomNumber = rand() % 250 + 1;

MSG29.MCU_Firmware_OEM_Version=randomNumber;
randomNumber = rand() % 250 + 1;
MSG29.MCU_Firmware_Main_Version =randomNumber;
randomNumber = rand() % 250 + 1;
MSG29.MCU_Firmware_Sub_Version =randomNumber;
randomNumber = rand() % 250 + 1;
MSG29.MCU_Bootloader_OEM_Version =randomNumber;
randomNumber = rand() % 250 + 1;
MSG29.MCU_Bootloader_Main_Version =randomNumber;
randomNumber = rand() % 250 + 1;
MSG29.MCU_Hardware_OEM_Version=randomNumber;
randomNumber = rand() % 250 + 1;
MSG29.MCU_Hardware_Main_Version=randomNumber;
randomNumber = rand() % 250 + 1;
MSG29.MCU_Hardware_Sub_Version=randomNumber;

SendMsg(MSG29);
}/* End BUSMASTER generated function - Utils_can_id_0x631 */
/* Start BUSMASTER generated function - Utils_can_id_0x62B */
void Utils_can_id_0x62B()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG30.Accelerometer_Xaxis=randomNumber;
randomNumber = rand() % 120 + 1;
MSG30.Gyroscope_Xaxis=randomNumber;

SendMsg(MSG30);
}/* End BUSMASTER generated function - Utils_can_id_0x62B */
/* Start BUSMASTER generated function - Utils_can_id_0x64B */
void Utils_can_id_0x64B()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;

MSG31.Accelerometer_Yaxis =randomNumber;
randomNumber = rand() % 120 + 1;
MSG31.Gyroscope_Yaxis =randomNumber;

SendMsg(MSG31);
}/* End BUSMASTER generated function - Utils_can_id_0x64B */
/* Start BUSMASTER generated function - Utils_can_id_0x65B */
void Utils_can_id_0x65B()
{

srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;

MSG32.Accelerometer_Zaxis=randomNumber;
randomNumber = rand() % 120 + 1;
MSG32.Gyroscope_Zaxis=randomNumber;

SendMsg(MSG32);
}/* End BUSMASTER generated function - Utils_can_id_0x65B */
/* Start BUSMASTER generated function - Utils_can_id_0x169 */
void Utils_can_id_0x169()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG33.Cruise_Control_Req =randomNumber;
randomNumber = rand() % 120 + 1;
MSG33.Hill_Hold_Command=randomNumber;
randomNumber = rand() % 120 + 1;
MSG33.Cruise_Set_Speed=randomNumber;
randomNumber = rand() % 120 + 1;
MSG33.Vehicle_speed_kmph=randomNumber;

SendMsg(MSG33);
}/* End BUSMASTER generated function - Utils_can_id_0x169 */
/* Start BUSMASTER generated function - Utils_can_id_0x7B4 */
void Utils_can_id_0x7B4()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG34.MCU_Diag_Request=randomNumber;

SendMsg(MSG34);
}/* End BUSMASTER generated function - Utils_can_id_0x7B4 */
/* Start BUSMASTER generated function - Utils_can_id_0x7ED */
void Utils_can_id_0x7ED()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG36.Functional_Diag_Request=randomNumber;

SendMsg(MSG36);
}/* End BUSMASTER generated function - Utils_can_id_0x7ED */
/* Start BUSMASTER generated function - Utils_can_id_0x680 */
void Utils_can_id_0x680()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG37.OTA_Status_Info=randomNumber;

SendMsg(MSG37);
}/* End BUSMASTER generated function - Utils_can_id_0x680 */
/* Start BUSMASTER generated function - Utils_can_id_0x151 */
void Utils_can_id_0x151()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;

MSG38.Vehicle_Mode_Lvl_1 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG38.Vehcile_Mode_Lvl_2 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG38.Vehicle_Mode_Lvl_3 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG38.Odometer =randomNumber;
randomNumber = rand() % 120 + 1;
MSG38.HMI_StatusBar_Stt =randomNumber;


SendMsg(MSG38);
}/* End BUSMASTER generated function - Utils_can_id_0x151 */
/* Start BUSMASTER generated function - Utils_can_id_0x7C2 */
void Utils_can_id_0x7C2()
{

srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG35.MCU_Diagnostic_Resp=randomNumber;

SendMsg(MSG35);
}/* End BUSMASTER generated function - Utils_can_id_0x7C2 */
/* Start BUSMASTER generated function - Utils_can_id_0x644 */
void Utils_can_id_0x644()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG39.OBC_Firmware_Version=randomNumber;
randomNumber = rand() % 120 + 1;
MSG39.OBC_Bootloader_Version=randomNumber;

SendMsg(MSG39);
}/* End BUSMASTER generated function - Utils_can_id_0x644 */
/* Start BUSMASTER generated function - Utils_can_id_0x645 */
void Utils_can_id_0x645()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG40.OBC_Hardware_Version=randomNumber;

SendMsg(MSG40);
}/* End BUSMASTER generated function - Utils_can_id_0x645 */
/* Start BUSMASTER generated function - Utils_can_id_0x8E */
void Utils_can_id_0x8E()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG41.VCU_to_OBC_Seed=randomNumber;
SendMsg(MSG41);
}/* End BUSMASTER generated function - Utils_can_id_0x8E */
/* Start BUSMASTER generated function - Utils_can_id_0x91 */
void Utils_can_id_0x91()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG42.OBC_Key=randomNumber;

SendMsg(MSG42);
}/* End BUSMASTER generated function - Utils_can_id_0x91 */
/* Start BUSMASTER generated function - Utils_can_id_0x8F */
void Utils_can_id_0x8F()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG43.VCU_Auth_Res_to_OBC =randomNumber;

SendMsg(MSG43);
}/* End BUSMASTER generated function - Utils_can_id_0x8F */
/* Start BUSMASTER generated function - Utils_can_id_0x12E */
void Utils_can_id_0x12E()
{

srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG44.Battery_Current =randomNumber;
randomNumber = rand() % 120 + 1;
MSG44.Battery_Pack_SoC =randomNumber;
randomNumber = rand() % 120 + 1;
MSG44.Charge_Voltage_limit =randomNumber;
randomNumber = rand() % 120 + 1;
MSG44.Charger_Mode_Request =randomNumber;
randomNumber = rand() % 120 + 1;
MSG44.Time_to_Charge_Hrs=randomNumber;
randomNumber = rand() % 120 + 1;
MSG44.Time_to_Charge_Mins =randomNumber;


SendMsg(MSG44);
}/* End BUSMASTER generated function - Utils_can_id_0x12E */
/* Start BUSMASTER generated function - Utils_can_id_0x12F */
void Utils_can_id_0x12F()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG45.Charge_Current_Limit=randomNumber;
randomNumber = rand() % 120 + 1;
MSG45.Discharge_Current_Limit =randomNumber;

SendMsg(MSG45);
}/* End BUSMASTER generated function - Utils_can_id_0x12F */
/* Start BUSMASTER generated function - Utils_can_id_0x221 */
void Utils_can_id_0x221()
{srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;

MSG46.Charger_Status_Signal =0x01;
randomNumber = rand() % 120 + 1;
MSG46.Charger_Mode =0x01;

SendMsg(MSG46);
}/* End BUSMASTER generated function - Utils_can_id_0x221 */
/* Start BUSMASTER generated function - Utils_can_id_0x50E */
void Utils_can_id_0x50E()
{
	srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;

MSG47.OBC_IP_AC_overVoltage=randomNumber;
randomNumber = rand() % 120 + 1;
MSG47.OBC_IP_AC_UnderV =randomNumber;
randomNumber = rand() % 120 + 1;
MSG47.OBC_IP_Overcurrent =randomNumber;
randomNumber = rand() % 120 + 1;
MSG47.OBC_OP_Overcurrent  =randomNumber;
randomNumber = rand() % 120 + 1; 
MSG47.OBC_High_temp =randomNumber;
randomNumber = rand() % 120 + 1; 
MSG47.OBC_High_temp =randomNumber;
randomNumber = rand() % 120 + 1; 
MSG47.OBC_Low_temp =randomNumber;
randomNumber = rand() % 120 + 1; 
MSG47.OBC_Temp_Sensor_fail =randomNumber;
randomNumber = rand() % 120 + 1;  
MSG47.OBC_Current_Sensor_fail=randomNumber;
randomNumber = rand() % 120 + 1; 
MSG47.OBC_ContactorRelay_fail=randomNumber;
randomNumber = rand() % 120 + 1; 
MSG47.OBC_OP_Open_Circuit =randomNumber;
randomNumber = rand() % 120 + 1; 
MSG47.OBC_OP_Short_Circuit =randomNumber;
randomNumber = rand() % 120 + 1;  
MSG47.OBC_OP_Over_Vol_flt =randomNumber;
randomNumber = rand() % 120 + 1; 
MSG47.OBC_OP_Under_Vol_flt =randomNumber;
randomNumber = rand() % 120 + 1; 
MSG47.DCDC_OP_Over_Vol_flt =randomNumber;
randomNumber = rand() % 120 + 1;  
MSG47.DCDC_IP_Over_Voltage =randomNumber;
randomNumber = rand() % 120 + 1;  
MSG47.DCDC_IP_Under_Voltage =randomNumber;
randomNumber = rand() % 120 + 1; 
MSG47.DCDC_IP_Over_Current =randomNumber;
randomNumber = rand() % 120 + 1; 
MSG47.DCDC_OP_Over_Current =randomNumber;
randomNumber = rand() % 120 + 1; 
MSG47.DCDC_High_Temp =randomNumber;
randomNumber = rand() % 120 + 1; 
MSG47.DCDC_Low_Temp =randomNumber;
randomNumber = rand() % 120 + 1; 
MSG47.DCDC_TempSensor_Failure=randomNumber;
randomNumber = rand() % 120 + 1; 
MSG47.DCDC_Current_Sensor_Failure=randomNumber;
randomNumber = rand() % 120 + 1; 
MSG47.DCDC_Contactor_or_Relay_Failure=randomNumber;
randomNumber = rand() % 120 + 1; 
MSG47.DCDC_OP_Open_Circuit =randomNumber;
randomNumber = rand() % 120 + 1; 
MSG47.DCDC_OP_Short_Circuit =randomNumber;
randomNumber = rand() % 120 + 1; 
MSG47.DCDC_OP_Under_Vol_flt =randomNumber;


SendMsg(MSG47);
}/* End BUSMASTER generated function - Utils_can_id_0x50E */
/* Start BUSMASTER generated function - Utils_can_id_0x19F */
void Utils_can_id_0x19F()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG48.Charger_IP_AC_Volt = randomNumber;
randomNumber = rand() % 120 + 1;
MSG48.Charger_IP_AC_Current= randomNumber;
randomNumber = rand() % 120 + 1;
MSG48.Charger_OP_DC_Volt  = randomNumber;
randomNumber = rand() % 120 + 1;
MSG48.Charger_OP_DC_Current = randomNumber;


SendMsg(MSG48);
}/* End BUSMASTER generated function - Utils_can_id_0x19F */
/* Start BUSMASTER generated function - Utils_can_id_0x50F */
void Utils_can_id_0x50F()
{
/* TODO */
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG89.HP_DCDC_IP_DC_Current=randomNumber;
randomNumber = rand() % 120 + 1;
MSG89.HP_DCDC_IP_DC_Voltage=randomNumber;
randomNumber = rand() % 120 + 1;
MSG89.HP_DCDC_OP_DC_Current=randomNumber;
randomNumber = rand() % 120 + 1;
MSG89.HP_DCDC_OP_DC_Voltage=randomNumber;

SendMsg(MSG89);
}/* End BUSMASTER generated function - Utils_can_id_0x50F */
/* Start BUSMASTER generated function - Utils_can_id_0x1A7 */
void Utils_can_id_0x1A7()
{
	srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG49.OBC_temp = randomNumber;
randomNumber = rand() % 120 + 1;
MSG49.HP_DCDC_Temp = randomNumber;
randomNumber = rand() % 120 + 1;
MSG49.OBC_OP_Enable =randomNumber;
randomNumber = rand() % 120 + 1;
MSG49.OBC_Coolant_Fan_Status =randomNumber;
randomNumber = rand() % 120 + 1;
MSG49.Control_Proximity_status =randomNumber;
randomNumber = rand() % 120 + 1;
MSG49.DCDC_Conv_OP_Enable =randomNumber;
randomNumber = rand() % 120 + 1;
MSG49.OBC_FET_Temp = randomNumber;

SendMsg(MSG49);
}/* End BUSMASTER generated function - Utils_can_id_0x1A7 */
/* Start BUSMASTER generated function - Utils_can_id_0x7CC */
void Utils_can_id_0x7CC()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG50.OBC_Diag_Request=randomNumber;

SendMsg(MSG50);
}/* End BUSMASTER generated function - Utils_can_id_0x7CC */
/* Start BUSMASTER generated function - Utils_can_id_0x7C5 */
void Utils_can_id_0x7C5()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG51.OBC_Diag_Resp=randomNumber;

SendMsg(MSG51);
}/* End BUSMASTER generated function - Utils_can_id_0x7C5 */
/* Start BUSMASTER generated function - Utils_can_id_0x674 */
void Utils_can_id_0x674()
{

srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG52.BMS_Diag_Request=randomNumber;

SendMsg(MSG52);
}/* End BUSMASTER generated function - Utils_can_id_0x674 */
/* Start BUSMASTER generated function - Utils_can_id_0x675 */
void Utils_can_id_0x675()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;

MSG53.BMS_Diag_Resp=randomNumber;

SendMsg(MSG53);
}/* End BUSMASTER generated function - Utils_can_id_0x675 */
/* Start BUSMASTER generated function - Utils_can_id_0x1B3 */
void Utils_can_id_0x1B3()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;

MSG54.Cell_Voltage_Vcell_1 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG54.Cell_Voltage_Vcell_2 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG54.Cell_Voltage_Vcell_3 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG54.Cell_Voltage_Vcell_4 =randomNumber;

SendMsg(MSG54);
}/* End BUSMASTER generated function - Utils_can_id_0x1B3 */
/* Start BUSMASTER generated function - Utils_can_id_0x1B4 */
void Utils_can_id_0x1B4()
{

srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;

MSG55.Cell_Voltage_Vcell_5=randomNumber;
randomNumber = rand() % 120 + 1;
MSG55.Cell_Voltage_Vcell_6=randomNumber;
randomNumber = rand() % 120 + 1;
MSG55.Cell_Voltage_Vcell_7=randomNumber;
randomNumber = rand() % 120 + 1;
MSG55.Cell_Voltage_Vcell_8=randomNumber;

SendMsg(MSG55);
}/* End BUSMASTER generated function - Utils_can_id_0x1B4 */
/* Start BUSMASTER generated function - Utils_can_id_0x1B5 */
void Utils_can_id_0x1B5()
{

srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;


MSG56.Cell_Voltage_Vcell_9 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG56.Cell_Voltage_Vcell_10 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG56.Cell_Voltage_Vcell_11 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG56.Cell_Voltage_Vcell_12 =randomNumber;


SendMsg(MSG56);
}/* End BUSMASTER generated function - Utils_can_id_0x1B5 */
/* Start BUSMASTER generated function - Utils_can_id_0x1B6 */
void Utils_can_id_0x1B6()
{
	srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;

MSG57.Cell_Voltage_Vcell_13 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG57.Cell_Voltage_Vcell_14 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG57.Cell_Voltage_Vcell_15 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG57.Cell_Voltage_Vcell_16 =randomNumber;

SendMsg(MSG57);
}/* End BUSMASTER generated function - Utils_can_id_0x1B6 */
/* Start BUSMASTER generated function - Utils_can_id_0x1B7 */
void Utils_can_id_0x1B7()
{
srand(time(NULL));
  	int randomNumber = rand() % 120+1;

MSG58.Cell_Voltage_Vcell_17 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG58.Cell_Voltage_Vcell_18 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG58.Cell_Voltage_Vcell_19 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG58.Cell_Voltage_Vcell_20 =randomNumber;

SendMsg(MSG58);
}/* End BUSMASTER generated function - Utils_can_id_0x1B7 */
/* Start BUSMASTER generated function - Utils_can_id_0x1B8 */
void Utils_can_id_0x1B8()
{

srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;

MSG59.Cell_Voltage_Vcell_21 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG59.Cell_Voltage_Vcell_22 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG59.Cell_Voltage_Vcell_23 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG59.Cell_Voltage_Vcell_24 =randomNumber;

SendMsg(MSG59);
}/* End BUSMASTER generated function - Utils_can_id_0x1B8 */
/* Start BUSMASTER generated function - Utils_can_id_0x1B9 */
void Utils_can_id_0x1B9()
{
	srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;

MSG60.Cell_Voltage_Vcell_25 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG60.Cell_Voltage_Vcell_26 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG60.Cell_Voltage_Vcell_27 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG60.Cell_Voltage_Vcell_28 =randomNumber;

SendMsg(MSG60);
}/* End BUSMASTER generated function - Utils_can_id_0x1B9 */
/* Start BUSMASTER generated function - Utils_can_id_0x12A */
void Utils_can_id_0x12A()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG61.Contactor_State = randomNumber;
randomNumber = rand() % 120 + 1;
MSG61.Battery_Pack_Bus_Volt = randomNumber;
randomNumber = rand() % 120 + 1;
MSG61.BMS_Board_Temp =randomNumber;
randomNumber = rand() % 120 + 1;
MSG61.BMS_Mode = randomNumber;
randomNumber = rand() % 120 + 1;
MSG61.Battery_Precharge_Failure_Status= randomNumber;
randomNumber = rand() % 120 + 1;
MSG61.Battery_Charge_Inhibit = randomNumber;
randomNumber = rand() % 120 + 1;
MSG61.Battery_Discharge_Inhibit = randomNumber;
randomNumber = rand() % 120 + 1;
MSG61.Battery_Derate_Drive_Curr_Flag = randomNumber;
randomNumber = rand() % 120 + 1;
MSG61.Battery_Derate_Charge_Curr_Flag =randomNumber;
randomNumber = rand() % 120 + 1;
MSG61.Battery_Inhibit_Regen_Fault = randomNumber;
randomNumber = rand() % 120 + 1;
MSG61.Battery_Permanant_Fault = randomNumber;
randomNumber = rand() % 120 + 1;
MSG61.BMS_Short_Cir_Detection_Error = randomNumber;


SendMsg(MSG61);
}/* End BUSMASTER generated function - Utils_can_id_0x12A */
/* Start BUSMASTER generated function - Utils_can_id_0x14E */
void Utils_can_id_0x14E()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG62.Regen_Current_Limit =randomNumber;
randomNumber = rand() % 120 + 1;
MSG62.Reserved  =randomNumber;
randomNumber = rand() % 120 + 1;
MSG62.Cell_Aggregate_Voltage  =randomNumber;
SendMsg(MSG62);

}/* End BUSMASTER generated function - Utils_can_id_0x14E */
/* Start BUSMASTER generated function - Utils_can_id_0x16E */
void Utils_can_id_0x16E()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG63.Balancing_Status = randomNumber;
randomNumber = rand() % 120 + 1;
MSG63.Effective_Battery_Temperature= randomNumber;
randomNumber = rand() % 120 + 1;
MSG63.Delta_Temp = randomNumber;
randomNumber = rand() % 120 + 1;
MSG63.Delta_Voltage = randomNumber;
randomNumber = rand() % 120 + 1;
MSG63.HVIL_OBC_Req = randomNumber;
randomNumber = rand() % 120 + 1;
MSG63.HVIL_MCU_Req = randomNumber;
randomNumber = rand() % 120 + 1;
MSG63.HVIL_OBC_Status =randomNumber;
randomNumber = rand() % 120 + 1;
MSG63.HVIL_MCU_Status = randomNumber;
randomNumber = rand() % 120 + 1;
MSG63.Isolation_Resistance=randomNumber;

SendMsg(MSG63);
}/* End BUSMASTER generated function - Utils_can_id_0x16E */
/* Start BUSMASTER generated function - Utils_can_id_0x16F */
void Utils_can_id_0x16F()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;

MSG64.Pack_Internal_Resistance =randomNumber;
randomNumber = rand() % 120 + 1;
MSG64.Pack_SOH =randomNumber;
randomNumber = rand() % 120 + 1;
MSG64.Pack_SOP =randomNumber;
randomNumber = rand() % 120 + 1;
MSG64.Total_Charge_Cycles =randomNumber;
randomNumber = rand() % 120 + 1;
MSG64.Pack_DOD =randomNumber;

SendMsg(MSG64);
}/* End BUSMASTER generated function - Utils_can_id_0x16F */
/* Start BUSMASTER generated function - Utils_can_id_0x170 */
void Utils_can_id_0x170()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;

MSG65.Cycle_Energy_In =randomNumber;
randomNumber = rand() % 120 + 1;
MSG65.Cycle_Enegy_Out =randomNumber;
randomNumber = rand() % 120 + 1;
MSG65.Total_Energy_In =randomNumber;
randomNumber = rand() % 120 + 1;
MSG65.Total_Energy_Out=randomNumber;

SendMsg(MSG65);
}/* End BUSMASTER generated function - Utils_can_id_0x170 */
/* Start BUSMASTER generated function - Utils_can_id_0x666 */
void Utils_can_id_0x666()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;

MSG66.BMS_Firmware_Version = randomNumber;
randomNumber = rand() % 120 + 1;
MSG66.BMS_Bootloader_Version= randomNumber;

SendMsg(MSG66);
}/* End BUSMASTER generated function - Utils_can_id_0x666 */
/* Start BUSMASTER generated function - Utils_can_id_0x172 */
void Utils_can_id_0x172()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;

MSG67.Battery_Temperature_1 = randomNumber;
randomNumber = rand() % 120 + 1;
MSG67.Battery_Temperature_2 = randomNumber;
randomNumber = rand() % 120 + 1;
MSG67.Battery_Temperature_3 = randomNumber;
randomNumber = rand() % 120 + 1;
MSG67.Battery_Temperature_4 = randomNumber;
randomNumber = rand() % 120 + 1;
MSG67.Battery_Temperature_5 = randomNumber;
randomNumber = rand() % 120 + 1;
MSG67.Battery_Temperature_6 = randomNumber;
randomNumber = rand() % 120 + 1;
MSG67.Battery_Temperature_Min =randomNumber;
randomNumber = rand() % 120 + 1;
MSG67.Battery_Temperature_Max =randomNumber;

SendMsg(MSG67);
}/* End BUSMASTER generated function - Utils_can_id_0x172 */
/* Start BUSMASTER generated function - Utils_can_id_0x17E */
void Utils_can_id_0x17E()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;

MSG68.BMS_Balancing_Status_Cell_1 = randomNumber;
randomNumber = rand() % 120 + 1;
MSG68.BMS_Balancing_Status_Cell_2 = randomNumber;
randomNumber = rand() % 120 + 1;
MSG68.BMS_Balancing_Status_Cell_3 = randomNumber;
randomNumber = rand() % 120 + 1;
MSG68.BMS_Balancing_Status_Cell_4 = randomNumber;
randomNumber = rand() % 120 + 1;
MSG68.BMS_Balancing_Status_Cell_5 = randomNumber;
randomNumber = rand() % 120 + 1;
MSG68.BMS_Balancing_Status_Cell_6 = randomNumber;
randomNumber = rand() % 120 + 1;
MSG68.BMS_Balancing_Status_Cell_7 = randomNumber;
randomNumber = rand() % 120 + 1;
MSG68.BMS_Balancing_Status_Cell_8 = randomNumber;
randomNumber = rand() % 120 + 1;
MSG68.BMS_Balancing_Status_Cell_9 = randomNumber;
randomNumber = rand() % 120 + 1;
MSG68.BMS_Balancing_Status_Cell_10 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG68.BMS_Balancing_Status_Cell_11 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG68.BMS_Balancing_Status_Cell_12 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG68.BMS_Balancing_Status_Cell_13 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG68.BMS_Balancing_Status_Cell_14 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG68.BMS_Balancing_Status_Cell_15 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG68.BMS_Balancing_Status_Cell_16 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG68.BMS_Balancing_Status_Cell_17 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG68.BMS_Balancing_Status_Cell_18 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG68.BMS_Balancing_Status_Cell_20 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG68.BMS_Balancing_Status_Cell_21 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG68.BMS_Balancing_Status_Cell_22 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG68.BMS_Balancing_Status_Cell_23 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG68.BMS_Balancing_Status_Cell_24 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG68.BMS_Balancing_Status_Cell_25 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG68.BMS_Balancing_Status_Cell_26 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG68.BMS_Balancing_Status_Cell_27 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG68.BMS_Balancing_Status_Cell_28 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG68.BMS_Cell_Min_Voltage = randomNumber;
randomNumber = rand() % 120 + 1;
MSG68.BMS_Cell_Max_Voltage = randomNumber;

SendMsg(MSG68);
}/* End BUSMASTER generated function - Utils_can_id_0x17E */
/* Start BUSMASTER generated function - Utils_can_id_0x41E */
void Utils_can_id_0x41E()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Sensor_Failure_Cell1 = randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Sensor_Failure_Cell2 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Sensor_Failure_Cell3 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Sensor_Failure_Cell4 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Sensor_Failure_Cell5 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Sensor_Failure_Cell6 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Sensor_Failure_Cell7 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Sensor_Failure_Cell8 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Sensor_Failure_Cell9 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Sensor_Failure_Cell10 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Sensor_Failure_Cell11 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Sensor_Failure_Cell12 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Sensor_Failure_Cell13 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Sensor_Failure_Cell14 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Sensor_Failure_Cell15 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Sensor_Failure_Cell16 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Sensor_Failure_Cell17 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Sensor_Failure_Cell18 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Sensor_Failure_Cell19=randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Sensor_Failure_Cell20 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Sensor_Failure_Cell21 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Sensor_Failure_Cell22 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Sensor_Failure_Cell23 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Sensor_Failure_Cell24 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Sensor_Failure_Cell25=randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Sensor_Failure_Cell26 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Sensor_Failure_Cell27 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Sensor_Failure_Cell28 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Out_of_Range_Cell1 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Out_of_Range_Cell2 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Out_of_Range_Cell3 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Out_of_Range_Cell4 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Out_of_Range_Cell5 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Out_of_Range_Cell6 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Out_of_Range_Cell7 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Out_of_Range_Cell8 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Out_of_Range_Cell9 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Out_of_Range_Cell10 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Out_of_Range_Cell11 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Out_of_Range_Cell12 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Out_of_Range_Cell13 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Out_of_Range_Cell14 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Out_of_Range_Cell15 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Out_of_Range_Cell16 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Out_of_Range_Cell17 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Out_of_Range_Cell18 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Out_of_Range_Cell19 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Out_of_Range_Cell20 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Out_of_Range_Cell21 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Out_of_Range_Cell22 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Out_of_Range_Cell23 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Out_of_Range_Cell24 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Out_of_Range_Cell25 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Out_of_Range_Cell26 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Out_of_Range_Cell27 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_V_Out_of_Range_Cell28 =randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_BatteryPackTemp_1_SensFail=randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_BatteryPackTemp_2_SensFail=randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_BatteryPackTemp_3_SensFail=randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_BatteryPackTemp_4_SensFail=randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_BatteryPackTemp_5_SensFail=randomNumber;
randomNumber = rand() % 120 + 1;
MSG69.BMS_BatteryPackTemp_6_SensFail=randomNumber;


SendMsg(MSG69);
}/* End BUSMASTER generated function - Utils_can_id_0x41E */
/* Start BUSMASTER generated function - Utils_can_id_0x41F */
void Utils_can_id_0x41F()
{
	srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG70.BMS_LowTempCharge_Error   =randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_LowTempDrive_Warning =randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_LowTempDrive_Error=randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.OverTimetoFastCharge_Error=randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.Battery_Discharge_Inhibit =randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.Battery_Derate_Drive_Cur_Flag=randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.Battery_Derate_Charge_Cur_Flag=randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.Battery_Inhibit_regen_Fault=randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.Battery_Volt_Deviation_Error=randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_Batt_PackTemp_1_OutofRange=randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_Batt_PackTemp_2_OutofRange=randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_Batt_PackTemp_3_OutofRange=randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_Batt_PackTemp_4_OutofRange=randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_Batt_PackTemp_5_OutofRange=randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_Batt_PackTemp_6_OutofRange=randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_Curr_Sens_Failure_OpenCir=randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_Curr_Sens_Failure_ShortCir=randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_OverCurrCharge_Warn  =randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_OverCurrCharge_Error =randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_PreChargeTooFast_Info =randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_PreChargeTooSlow_Info =randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_PreChargeFailure =randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_MOSFETsConnFailed  =randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_MOSFETsDisconnFailed =randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_PDU_TempWarn_Info =randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_PDU_Temp_Error =randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_OverVChargeWarnInfo =randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_OverVChargeError  =randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_OverVChar_Perm_Fault =randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_OverV_Regen_Warn_Info =randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_OverV_Regen_Error =randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_UndV_Warn_Info  =randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_UndV_Error =randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_UndV_Perm_fault  =randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_OverTempCharWarnInfo =randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_OverTempCharError =randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_OverTempDriveWarnInfo =randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_OverTempDriveError =randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_OvTemp_CellVentError =randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_OvTemp_CellVentFailure=randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_ShortCir_DetectError =randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_ShortCir_Detect_PermFault=randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_Cell_Failure_PermFault=randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_ParaCell_DisconFault =randomNumber;
randomNumber = rand() % 120 + 1;
MSG70.BMS_LowTemp_CharWarnInfo =randomNumber;
SendMsg(MSG70);
}/* End BUSMASTER generated function - Utils_can_id_0x41F */
/* Start BUSMASTER generated function - Utils_can_id_0x152 */
void Utils_can_id_0x152()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG71.Traction_Status =  randomNumber;
randomNumber = rand() % 120 + 1;
MSG71.Lean_angle_right =randomNumber;
randomNumber = rand() % 120 + 1;
MSG71.Lean_angle_left = randomNumber;
randomNumber = rand() % 120 + 1;
MSG71.Throtte_1_Value = randomNumber;
randomNumber = rand() % 120 + 1;
MSG71.Throttle_2_Value =randomNumber;
randomNumber = rand() % 120 + 1;
MSG71.Motor_Cut = randomNumber;

SendMsg(MSG71);
}/* End BUSMASTER generated function - Utils_can_id_0x152 */
/* Start BUSMASTER generated function - Utils_can_id_0x155 */
void Utils_can_id_0x155()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG72.Throttle_1_per = randomNumber;
randomNumber = rand() % 120 + 1;
MSG72.Throttle_2_per = randomNumber;
randomNumber = rand() % 120 + 1;
MSG72.Throttle_Percentage =randomNumber;
randomNumber = rand() % 120 + 1;
MSG72.Thottle_1_flt = randomNumber;
randomNumber = rand() % 120 + 1;
MSG72.Throttle_2_flt =randomNumber;
randomNumber = rand() % 120 + 1;
MSG72.Throttle_Dev_flt = randomNumber;
randomNumber = rand() % 120 + 1;
MSG72.Front_Brake_Status =randomNumber;
randomNumber = rand() % 120 + 1;
MSG72.Rear_Brake_Status =randomNumber;
randomNumber = rand() % 120 + 1;;
MSG72.Regeneration_Command = randomNumber;

SendMsg(MSG72);
}/* End BUSMASTER generated function - Utils_can_id_0x155 */
/* Start BUSMASTER generated function - Utils_can_id_0x153 */
void Utils_can_id_0x153()
{
/* TODO */
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG73.SOM_HeartBeat_Failure= randomNumber;
randomNumber = rand() % 120 + 1;
MSG73.SOM_Status= randomNumber;
randomNumber = rand() % 120 + 1;
MSG73.Passcode_Authentication= randomNumber;

SendMsg(MSG73);
}/* End BUSMASTER generated function - Utils_can_id_0x153 */
/* Start BUSMASTER generated function - Utils_can_id_0x154 */
void Utils_can_id_0x154()
{
/* TODO */
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG74.ABS_FrontBrake_Status = randomNumber;
randomNumber = rand() % 120 + 1;
MSG74.ABS_RearBrake_Status = randomNumber;
randomNumber = rand() % 120 + 1; 
MSG74.ABS_State = randomNumber;
randomNumber = rand() % 120 + 1;
MSG74.ABS_Faulty =  randomNumber;

SendMsg(MSG74);
}/* End BUSMASTER generated function - Utils_can_id_0x154 */
/* Start BUSMASTER generated function - Utils_can_id_0x667 */
void Utils_can_id_0x667()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG75.ABS_Firmware_version = randomNumber;
randomNumber = rand() % 120 + 1;
MSG75.ABS_Bootloader_version =randomNumber;
SendMsg(MSG75);

}/* End BUSMASTER generated function - Utils_can_id_0x667 */
/* Start BUSMASTER generated function - Utils_can_id_0x668 */
void Utils_can_id_0x668()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG76.BMS_Hardware_Version=randomNumber;
SendMsg(MSG76);
}/* End BUSMASTER generated function - Utils_can_id_0x668 */
/* Start BUSMASTER generated function - Utils_can_id_0x669 */
void Utils_can_id_0x669()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG77.ABS_Hardware_version=randomNumber;
SendMsg(MSG77);
}/* End BUSMASTER generated function - Utils_can_id_0x669 */
/* Start BUSMASTER generated function - Utils_can_id_0x171 */
void Utils_can_id_0x171()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;	
MSG78.OBC_Wakeup=randomNumber;
SendMsg(MSG78);

}/* End BUSMASTER generated function - Utils_can_id_0x171 */
/* Start BUSMASTER generated function - Utils_can_id_0x174 */
void Utils_can_id_0x174()
{
	srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG79.Charger_Plugin = randomNumber;
randomNumber = rand() % 120 + 1;
MSG79.MCU_Power_Supply =randomNumber;
randomNumber = rand() % 120 + 1;
MSG79.HU_Power_Supply =randomNumber;
randomNumber = rand() % 120 + 1; 
MSG79.Left_Indicator_Power_Supply = randomNumber;
randomNumber = rand() % 120 + 1;
MSG79.Right_Indicator_Power_Supply =randomNumber;
randomNumber = rand() % 120 + 1; 
MSG79.High_Beam_Power_Supply = randomNumber;
randomNumber = rand() % 120 + 1;
MSG79.Low_Beam_Power_Supply = randomNumber;
randomNumber = rand() % 120 + 1;
MSG79.DRL_Power_Supply = randomNumber;
randomNumber = rand() % 120 + 1;
MSG79.Left_Switch_Cube_Power_Supply = randomNumber;
randomNumber = rand() % 120 + 1;
MSG79.Right_Switch_Cube_Power_Supply =randomNumber;
randomNumber = rand() % 120 + 1;
MSG79.Horn_Power_Supply = randomNumber;
randomNumber = rand() % 120 + 1;
MSG79.Speaker_Power_Supply = randomNumber;
randomNumber = rand() % 120 + 1;
MSG79.SOM_Power_Supply = randomNumber;
randomNumber = rand() % 120 + 1;
MSG79.ESCL_Power_Supply = randomNumber;
randomNumber = rand() % 120 + 1;
MSG79.ESCL_Commands =randomNumber;
randomNumber = rand() % 120 + 1;
MSG79.Stop_Lamp_Power_Supply = randomNumber;
randomNumber = rand() % 120 + 1;
MSG79.Tail_Lamp_Power_Supply =randomNumber;
randomNumber = rand() % 120 + 1;
MSG79.Charger_Info = randomNumber;
SendMsg(MSG79);
}/* End BUSMASTER generated function - Utils_can_id_0x174 */
/* Start BUSMASTER generated function - Utils_can_id_0x643 */
void Utils_can_id_0x643()
{
/* TODO */
	srand(time(NULL));
// Generate a random number between 1 and 10
int randomNumber = rand() % 250 + 1;
MSG80.ESCL_Hardware_Version=randomNumber;
SendMsg(MSG80);
}/* End BUSMASTER generated function - Utils_can_id_0x643 */
/* Start BUSMASTER generated function - Utils_can_id_0x646 */
void Utils_can_id_0x646()
{
srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG81.ESCL_Firmware_version = randomNumber;
randomNumber = rand() % 120 + 1;
MSG81.ESCL_Bootloader_version =randomNumber;
SendMsg(MSG81);

}/* End BUSMASTER generated function - Utils_can_id_0x646 */
/* Start BUSMASTER generated function - Utils_can_id_0x4CE */
void Utils_can_id_0x4CE()
{
	srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG82.ESCL_Supply_Voltage = randomNumber;
randomNumber = rand() % 120 + 1;
MSG82.Motor_Stall_Current = randomNumber;
randomNumber = rand() % 120 + 1;
MSG82.ESCL_Status = randomNumber;
randomNumber = rand() % 120 + 1;
MSG82.ESCL_Hall1_Status = randomNumber;
randomNumber = rand() % 120 + 1;
MSG82.ESCL_Hall2_Status =  randomNumber;
randomNumber = rand() % 120 + 1;
MSG82.ESCL_Power_Status =  randomNumber;
randomNumber = rand() % 120 + 1;
MSG82.ESCL_Plunger_Status = randomNumber;
randomNumber = rand() % 120 + 1; 
MSG82.ESCL_Motor_Temp_Fault =randomNumber;
randomNumber = rand() % 120 + 1; 
MSG82.ESCL_Motor_Open_Fault =  randomNumber;
randomNumber = rand() % 120 + 1;
MSG82.ESCL_Motor_Short_Fault = randomNumber;
randomNumber = rand() % 120 + 1;
MSG82.ESCL_Lock_Unlock_Error = randomNumber;
randomNumber = rand() % 120 + 1;
MSG82.ESCL_Sleep_Ack =  randomNumber;
SendMsg(MSG82); 
}/* End BUSMASTER generated function - Utils_can_id_0x4CE */
/* Start BUSMASTER generated function - Utils_can_id_0x7D8 */
void Utils_can_id_0x7D8()
{
	srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG83.ESCL_Diagnostic_Resp=randomNumber;
SendMsg(MSG83);
}/* End BUSMASTER generated function - Utils_can_id_0x7D8 */
/* Start BUSMASTER generated function - Utils_can_id_0x7D9 */
void Utils_can_id_0x7D9()
{
	srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG84.ESCL_Diag_Req=randomNumber;
SendMsg(MSG84); 
}/* End BUSMASTER generated function - Utils_can_id_0x7D9 */
/* Start BUSMASTER generated function - Utils_can_id_0x7DA */
void Utils_can_id_0x7DA()
{
	srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG85.BCM_Diag_Response=randomNumber;
SendMsg(MSG85); 
}/* End BUSMASTER generated function - Utils_can_id_0x7DA */
/* Start BUSMASTER generated function - Utils_can_id_0x7DB */
void Utils_can_id_0x7DB()
{
	srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG86.BCM_Diag_Request=randomNumber;
SendMsg(MSG86); 
}/* End BUSMASTER generated function - Utils_can_id_0x7DB */
/* Start BUSMASTER generated function - Utils_can_id_0x173 */
void Utils_can_id_0x173()
{
	srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG87.Custom_Drive_Enable =randomNumber;
randomNumber = rand() % 120 + 1;
MSG87.Power =randomNumber;
randomNumber = rand() % 120 + 1;
MSG87.Throttle_performance =randomNumber;
randomNumber = rand() % 120 + 1;
MSG87.Regen =randomNumber;
SendMsg(MSG87); 
/* TODO */
}/* End BUSMASTER generated function - Utils_can_id_0x173 */
/* Start BUSMASTER generated function - Utils_can_id_0x555 */
void Utils_can_id_0x555()
{
	srand(time(NULL));
  	int randomNumber = rand() % 120 + 1;
MSG88.ABS_Setting = randomNumber;
randomNumber = rand() % 120 + 1;
MSG88.Regen_Setting= randomNumber;
randomNumber = rand() % 120 + 1;
MSG88.Speed_Limit_Setting = randomNumber;
randomNumber = rand() % 120 + 1;
MSG88.Haptic_Setting = randomNumber;
randomNumber = rand() % 120 + 1;
MSG88.Hill_Hold_Setting = randomNumber;
randomNumber = rand() % 120 + 1;
MSG88.Traction_Control_Setting =randomNumber;
randomNumber = rand() % 120 + 1;
MSG88.Cruise_Control_Setting = randomNumber;
randomNumber = rand() % 120 + 1;
MSG88.Set_Max_Speed = randomNumber;
SendMsg(MSG88); 
}/* End BUSMASTER generated function - Utils_can_id_0x555 */
